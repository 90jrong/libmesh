###############################################################################
## Please note:
##   The ./configure script generates Make.common from 
##   Make.common.in, so if you want to change something,
##   then do it in the latter file (here!) and re-run
##   ./configure in the top level directory
###############################################################################

#############################################################################
# Certain PETSc's define DESTDIR - which is very, very bad for us.  Of course
# we are asking for it by including their Makefile variables here.
# Guard against that.
libmesh_save_DESTDIR := $(DESTDIR)


# top-level source dir.  This is set by automake for internal builds, otherwise
# it gets set to the installation prefix
top_srcdir ?= @prefix@

###############################################################################
# the following lines will be replaced by the output 
# of ./configure
hosttype              = @host@
hostos                = @host_os@

libmesh_CXX           = @CXX@
libmesh_CC            = @CC@
libmesh_F77           = @F77@
libmesh_F90           = @FC@
libmesh_LDFLAGS       = @LDFLAGS@
#libmesh_DLFLAGS       =
libmesh_LIBS          = @LIBS@
libmesh_FLIBS         = @FLIBS@
libmesh_FFLAGS        = @FFLAGS@
GXX-VERSION           = @GXX_VERSION@
# libmesh_CXXSHAREDFLAG = @CXXSHAREDFLAG@
# libmesh_CSHAREDFLAG   = @CXXSHAREDFLAG@
libmesh_RPATHFLAG     = @RPATHFLAG@
NODEPRECATEDFLAG     = @NODEPRECATEDFLAG@

# Complex variable support
enable-complex       = @enablecomplex@

# Petsc iterative solvers for parallel and uniprocessor
# applications
enable-petsc         = @enablepetsc@
petsc-version        = @petscversion@
petsc-major          = @petscmajor@
petsc-major-minor    = @petscmajorminor@
PETSC_ARCH           = @PETSC_ARCH@
PETSC_DIR            = @PETSC_DIR@

# Slepc for eigen value analysis
enable-slepc         = @enableslepc@
SLEPC_DIR            = @SLEPC_DIR@

# MPI configuration
# (only explicitly defined when PETSc is absent, otherwise snooped from PETSc)
MPI_IMPL             = @MPI_IMPL@
MPI_INCLUDE          = @MPI_INCLUDES_PATHS@
MPI_LIB              = @MPI_LIBS_PATHS@ @MPI_LIBS@

# Boost Configuration - currently using header-only libraries
libmesh_INCLUDE += @BOOST_CPPFLAGS@
#libmesh_LIBS     += @BOOST_LDFLAGS@

# Doxygen for generating documentation
doxygen		     = @DOXYGEN@

# Perl for making .depend
perl                 = @PERL@

# Flag for optional packages
enable-optional      = @enableoptional@
# enable-eigen         = @enableeigen@
# enable-exodus	     = @enableexodus@
# enable-fparser       = @enablefparser@
# enable-glpk          = @enableglpk@
# enable-gmv           = @enablegmv@
# enable-gzstream      = @enablegz@
# enable-laspack	     = @enablelaspack@
# enable-libhilbert    = @enablelibhilbert@
# enable-metis	     = @enablemetis@
# enable-nemesis	     = @enablenemesis@
# enable-netcdf	     = @enablenetcdf@
# enable-openmp        = @enableopenmp@
# enable-parmetis	     = @enableparmetis@
# enable-sfcurves	     = @enablesfc@
# enable-tetgen        = @enabletetgen@
# enable-triangle      = @enabletriangle@
# enable-vtk           = @enablevtk@

# #
# # Set the current directory.
# libmesh_dir := @PWD@
# export libmesh_dir
###############################################################################


###############################################################################
libmesh_CPPFLAGS := @CPPFLAGS_METHOD@
libmesh_CXXFLAGS := @CXXFLAGS_METHOD@
libmesh_CFLAGS   := @CFLAGS_METHOD@

# ###############################################################################
# # The mesh library
# #
# mesh_library_dir := $(libmesh_dir)/lib/$(hosttype)_$(METHOD)

# mesh_library     := $(mesh_library_dir)/libmesh$(static_libext)
# ifeq ($(enable-shared),yes) 
#   mesh_library   := $(mesh_library_dir)/libmesh$(shared_libext)
# #  libmesh_DLFLAGS += $(libmesh_RPATHFLAG)$(mesh_library_dir)
# endif

#libmesh_LIBS += $(mesh_library)
###############################################################################



###############################################################################
# now configuration for package includes, libraries, etc...

#
# The include directories for libMesh
libmesh_INCLUDE += -I$(top_srcdir)/include/base \
                   -I$(top_srcdir)/include/enums \
                   -I$(top_srcdir)/include/error_estimation \
                   -I$(top_srcdir)/include/fe \
                   -I$(top_srcdir)/include/geom \
                   -I$(top_srcdir)/include/mesh \
                   -I$(top_srcdir)/include/numerics \
                   -I$(top_srcdir)/include/parallel \
                   -I$(top_srcdir)/include/partitioning \
                   -I$(top_srcdir)/include/physics \
                   -I$(top_srcdir)/include/quadrature \
                   -I$(top_srcdir)/include/reduced_basis \
                   -I$(top_srcdir)/include/solvers \
                   -I$(top_srcdir)/include/systems \
                   -I$(top_srcdir)/include/utils

#
# Optional packages
ifeq ($(enable-optional),yes)
  libmesh_INCLUDE += @libmesh_optional_INCLUDES@
  libmesh_LIBS    += @libmesh_optional_LIBS@

#   # if OpenMP is used, modify the build and link flags
#   ifeq ($(enable-openmp),yes)
#     libmesh_CXXFLAGS += @OPENMP_CXXFLAGS@
#     libmesh_CFLAGS   += @OPENMP_CFLAGS@
#     libmesh_FFLAGS   += @OPENMP_FFLAGS@
#   endif

#       # Nox, an additional option if AztecOO is present
#       ifeq ($(enable-nox),yes)
#           #include @NOX_MAKEFILE_EXPORT@
#           #libmesh_LIBS    += $(NOX_LIBS)
#           #libmesh_INCLUDE += $(NOX_INCLUDES)

#           libmesh_LIBS     += @NOX_LIBS@
#           libmesh_INCLUDE  += @NOX_INCLUDES@
#           libmesh_CPPFLAGS += -DHAVE_CONFIG_H
#       endif

  #############################################################################
  # SLEPc
  ifeq ($(enable-slepc),yes)
    # The configure script checks that only corresponding
    # versions of PETSc and SLEPc can be used. Hence,
    # petsc-major-minor is also used to identify the SLEPc version 
    ifeq ($(petsc-major-minor),2.3.x)  # 2.3.x style
      include $(SLEPC_DIR)/bmake/$(PETSC_ARCH)/slepcconf
    else
	  ifeq ($(petsc-major),3)  # 3.0.x & newer style
	    ifeq ($(petsc-major-minor),3.2.x)  # 3.2.x & newer style
	      include ${SLEPC_DIR}/conf/slepc_variables
	    else
	      include ${SLEPC_DIR}/conf/slepc_common_variables
	    endif
	  else
	    include $(SLEPC_DIR)/bmake/$(PETSC_ARCH)/packages
	  endif
    endif	

    libmesh_INCLUDE += -I$(SLEPC_DIR)/include -I$(SLEPC_DIR)/$(PETSC_ARCH)/include

    libs-SLEPC = $(SLEPC_LIB)

    libmesh_LIBS += $(libs-SLEPC) $(ARPACK_LIB)

    # libmesh_DLFLAGS += $(SLEPC_LIB)

  endif #end ifeq ($(enable-slepc),yes)

  # MPI configuration when Petsc is absent
  libmesh_LIBS    += $(MPI_LIB)
  libmesh_INCLUDE += $(MPI_INCLUDE)

endif # End of disable-optional test


# # Finally, Append the linker flags to the libraries
# libmesh_LIBS += $(libmesh_DLFLAGS) $(libmesh_LDFLAGS)


###############################################################################



# Restore our DESTDIR.  Really, FIXME: Don't include strangers Makefiles!
DESTDIR=$(libmesh_save_DESTDIR)



###############################################################################
#
# 
#
.PHONY: echo echo_cxxflags echo_include echo_ldflags

#
# Useful for checking make rules
#
echo:
	@echo "C++ compiler:"
	@echo "$(libmesh_CXX)"
	@echo
	@echo "libmesh_CPPFLAGS:"
	@echo "$(libmesh_CPPFLAGS)"
	@echo
	@echo "libmesh_CFLAGS:"
	@echo "$(libmesh_CFLAGS)"
	@echo
	@echo "libmesh_CXXFLAGS:"
	@echo "$(libmesh_CXXFLAGS)"
	@echo
	@echo "libmesh_INCLUDE:"
	@echo "$(libmesh_INCLUDE)"
	@echo
	@echo "libmesh_LIBS:"
	@echo "$(libmesh_LIBS)"
	@echo
	@echo "libmesh_LDFLAGS:"
	@echo "$(libmesh_LDFLAGS)"
	@echo
	@echo "libmesh_DLFLAGS:"
	@echo "$(libmesh_DLFLAGS)"
	@echo

#
# Print the name of the C++ compiler, padded with whitespace
#
echo_cxx:
	@echo  " " $(libmesh_CXX) " "

#
# Print the name of the C compiler, padded with whitespace
#
echo_cc:
	@echo  " " $(libmesh_CC) " "

#
# Print the flags used for the C preprocessor, padded with whitespace
#
echo_cppflags:
	@echo " " $(libmesh_CPPFLAGS) " "

#
# Print the flags used for C++ compilation, padded with whitespace
#
echo_cxxflags:
	@echo " " $(libmesh_CXXFLAGS) " "

#
# Print the flags used for C compilation, padded with whitespace
#
echo_cflags:
	@echo " " $(libmesh_CFLAGS) " "

#
# Print C++ compiler include path, padded with whitespace
#
echo_include:
	@echo " " $(libmesh_INCLUDE) " "

#
# Print the flags used to link, padded with whitespace
#
echo_ldflags:
	@echo " " $(libmesh_LIBS) $(libmesh_LDFLAGS) $(libmesh_DLFLAGS) " "


# Local Variables:
# mode: makefile
# End:
